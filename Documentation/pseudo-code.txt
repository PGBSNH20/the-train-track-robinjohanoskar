
interface ITrainPlanner
class TrainPlanner()
    .LoadTravelPlan()
    .SaveTravelPlan()
    .SetTrain() // or pass a train into the constructor
    .AddStop(stopId, name, time)
    .RemoveStop(stopId)
    .CloseBar("10:23")
    .OpenBar("10:25")
    .SetSwitch(switch1, SwitchDirection.Left)
    .SetSwitch(switch2, SwitchDirection.Right)
    .GeneratePlan()

interface ITravelPlan
class TravelPlan
    train
    list of stops

FakeTime/WorldTime

Train
    Start
        Tick once per second:
            check timetable against FakeTime/WorldTime
                print a status message when there's a match (FakeTime == arrivalTime/departureTime//LevelCrossing)


public coordinate TrainPosition (x, y)
public char LastSymbol

public bool AtStation = false
public bool BomOpen = true


klockan tickar 1 minut:
	if(AtStation == false){

	ReadTrack()
	{
		//Flyttar fram tåget 1 steg
	}

	if( om nästa char == '-')
	{
		//Ingenting
	}
	
	if( om nästa, nästa char == '=')
	{
		BomOpen = false;
		
	}

	if(LastSymbol == '=')
	{
		BomOpen = true;
	}




klockan tickar 1 minut:
	ReadTrack()
	{
		//Flyttar fram tåget 1 steg
	}

